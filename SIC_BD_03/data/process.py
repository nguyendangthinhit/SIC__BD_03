# file n√†y l√† file chuy·ªÉn d·ªØ li·ªáu t·ª´ txt sang json ƒë·ªÉ sau n√†y ti·ªán cho vi·ªác x·ª≠ l√≠ v√† train ai :) sao t√¥i k vi·∫øt hoa ƒëc 
# run th·ª≠ file ƒë·ªÉ bi·∫øt c√°ch s·ª≠ d·ª•ng
import sys
import json
import re
from typing import List, Dict
from pathlib import Path

def parse_post_from_lines(lines: List[str]) -> Dict:
    post_data = {
        "url": "",
        "poster": "",
        "author": "",
        "content": "",
        "time": "",
        "comments": []
    }

    i = 0
    while i < len(lines):
        line = lines[i]

        # ‚úÖ Nh·∫≠n link (d√π l√† "Link:", "Link ", ho·∫∑c ch·ª©a facebook.com)
        if "facebook.com" in line:
            match = re.search(r"https?://\S+", line)
            if match:
                post_data["url"] = match.group(0)

        elif line.startswith("B√†i vi·∫øt c·ªßa"):
            post_data["poster"] = line[12:].strip()

        elif line == "T√°c gi·∫£":
            if i + 1 < len(lines):
                post_data["author"] = lines[i + 1].strip()
                i += 1

        elif line.startswith("N·ªôi dung b√†i vi·∫øt:"):
            post_data["content"] = line[20:].strip()

        elif re.match(r"\d+ (gi√¢y|ph√∫t|gi·ªù|ng√†y|tu·∫ßn|th√°ng|nƒÉm)", line):
            post_data["time"] = line

        elif line == "Tr·∫£ l·ªùi":
            break

        i += 1

    # Parse comments
    while i < len(lines):
        line = lines[i]

        # B·ªè c√°c d√≤ng kh√¥ng quan tr·ªçng
        if line in {"Tr·∫£ l·ªùi", "ƒê√£ ch·ªânh s·ª≠a", "Fan c·ª©ng", "Fan ƒëang l√™n", "Xem b·∫£n d·ªãch"}:
            i += 1
            continue

        if i + 2 >= len(lines):
            break

        user = lines[i]
        text = lines[i + 1]
        time = lines[i + 2]

        if not re.match(r"\d+ (gi√¢y|ph√∫t|gi·ªù|ng√†y|tu·∫ßn|th√°ng|nƒÉm)", time):
            i += 1
            continue

        post_data["comments"].append({
            "user": user,
            "text": text,
            "time": time
        })
        i += 3

    return post_data


def main():
    if len(sys.argv) != 2:
        print("‚ö†Ô∏è C√°ch d√πng: python process.py <path/t·ªõi/file.txt>")
        print("V√≠ d·ª•: python process.py thinh/cao.txt")
        sys.exit(1)

    txt_path = Path(sys.argv[1])

    if not txt_path.exists():
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file: {txt_path}")
        sys.exit(1)

    user_folder = txt_path.parent.name
    json_path = txt_path.parent / f"{user_folder}_all_posts.json"

    with open(txt_path, "r", encoding="utf-8") as f:
        lines = [line.strip() for line in f if line.strip()]

    parsed_post = parse_post_from_lines(lines)

    try:
        with open(json_path, "r", encoding="utf-8") as f:
            all_posts = json.load(f)
    except FileNotFoundError:
        all_posts = []

    all_posts.append(parsed_post)

    with open(json_path, "w", encoding="utf-8") as f:
        json.dump(all_posts, f, ensure_ascii=False, indent=2)

    print(f"\n‚úÖ ƒê√£ th√™m b√†i vi·∫øt m·ªõi v√†o: {json_path}")
    print(f"üìé Link b√†i vi·∫øt: {parsed_post['url']}")
    print(f"üìù S·ªë comment: {len(parsed_post['comments'])}")

if __name__ == "__main__":
    main()
