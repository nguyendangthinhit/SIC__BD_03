" H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG"
"m√† c√≥ chi m√¥ h∆∞·ªõng d·∫´n , ƒë·ªçc c√°i test input ph·∫ßn main ak, l·∫•y d·ªØ li·ªáu cho gi·ªëng c√°i n·ªõ quƒÉng d√¥ th·∫ø ch·ªó n·ªõ l√† ƒëc"

import json
import re
import os

def normalize(text):
    """Chu·∫©n h√≥a chu·ªói: lo·∫°i b·ªè kho·∫£ng tr·∫Øng th·ª´a ·ªü ƒë·∫ßu, cu·ªëi, v√† r√∫t g·ªçn gi·ªØa"""
    return re.sub(r'\s+', ' ', text.strip())

def normalize_content(raw_content):
    """X·ª≠ l√Ω content c√≥ th·ªÉ l√† list ho·∫∑c string"""
    if isinstance(raw_content, list):
        return normalize(" ".join(raw_content))
    elif isinstance(raw_content, str):
        return normalize(raw_content)
    else:
        return ""

def is_duplicate_link_and_add(new_entry, file_path='links_fb.json'):
    new_name = normalize(new_entry.get('name', ''))
    new_time = normalize(new_entry.get('time', ''))
    new_content = normalize_content(new_entry.get('content', ''))
    new_url = normalize(new_entry.get('source_url', ''))

    new_entry_normalized = {
        "name": new_name,
        "time": new_time,
        "content": new_content,
        "source_url": new_url
    }

    if os.path.exists(file_path):
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
        except json.JSONDecodeError:
            data = []
    else:
        data = []

    for entry in data:
        name = normalize(entry.get('name', ''))
        time = normalize(entry.get('time', ''))
        content = normalize_content(entry.get('content', ''))
        if new_name == name and new_time == time and new_content == content:
            return "tr√πng r·ªìi"

    data.append(new_entry_normalized)
    with open(file_path, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

    return "oke"


# =============================
# üëá ƒêo·∫°n test m·∫´u
# =============================
"v√≠ d·ª•"
# test_input = {
#         "name": "Kaito Kid",
#         "time": "10 th√°ng 7 l√∫c 14:17",
#         "content": "ƒê·ªÅ thi t·ªët nghi·ªáp THPT qu√° kh√≥, Qu·ªëc h·ªôi y√™u c·∫ßu b√°o c√°o",
#         "source_url": "https://www.facebook.com/share/p/1C8B5TNDDp/"
#     }
if __name__ == "__main__":
    test_input = {
        "name": "Kaito Kid",
        "time": "27 th√°ng 6 l√∫c 09:50 ",
        "content": "CH√çNH TH·ª®C: ƒê·ªÅ thi t·ªët nghi·ªáp THPT m√¥n V·∫≠t L√Ω nƒÉm 2025.",
        "source_url": "https://www.facebook.com/share/p/19bPCoimAv/"
    }


    print(is_duplicate_link_and_add(test_input))  # K·∫øt qu·∫£: "oke" ho·∫∑c "tr√πng r·ªìi"
